{"ast":null,"code":"import axios from \"axios\"; // import sqlite3 from \"sqlite3\"\n// let nextLeiId = 0\n// const BASEURL = \"\";\n// const APIKEY = \"\";\n// const sqlite3 = require('sqlite3').verbose();\n// open database\n\nvar db = new sqlite3.Database('LEIscrape.db.sqlite', function (err) {\n  if (err) {\n    return console.error(err.message);\n  }\n\n  return console.log('Connected to MongoDB database.');\n}); // close the database connection\n\ndb.close(function (err) {\n  if (err) {\n    return console.error(err.message);\n  }\n\n  console.log('Close the database connection.');\n});\nexport var setVisibilityFilter = function setVisibilityFilter(filter) {\n  return {\n    type: 'SET_VISIBILITY_FILTER',\n    filter: filter\n  };\n};\nexport var toggleLEI = function toggleLEI(id) {\n  return {\n    type: 'TOGGLE_LEI',\n    id: id\n  };\n};\nexport var requestData = function requestData(key) {\n  return {\n    type: \"REQUEST_DATA\",\n    key: key\n  };\n};\nexport var receiveData = function receiveData(key, data) {\n  return {\n    type: \"RECEIVE_DATA\",\n    key: key,\n    data: data\n  };\n};\nexport var saveSelectedLEI = function saveSelectedLEI(LEIName) {\n  return {\n    type: \"SAVE_LEI\",\n    LEIName: LEIName\n  };\n};\nexport function fetchLEI(LEIName) {\n  return function (dispatch) {\n    dispatch(requestData(\"REQUEST_Data\"));\n    return axios.get(BASEURL + LEIName + APIKey).then(function (data) {\n      console.log(data);\n      setTimeout(function () {\n        dispatch(receiveData(LEIName, data.data));\n      }, 2500);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/andrewflak/Data.Gov_LEI/client/src/actions/index.js"],"names":["axios","db","sqlite3","Database","err","console","error","message","log","close","setVisibilityFilter","filter","type","toggleLEI","id","requestData","key","receiveData","data","saveSelectedLEI","LEIName","fetchLEI","dispatch","get","BASEURL","APIKey","then","setTimeout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;AAEA;AACA;AAEA;AACA;;AACA,IAAIC,EAAE,GAAG,IAAIC,OAAO,CAACC,QAAZ,CAAqB,qBAArB,EAA4C,UAACC,GAAD,EAAS;AAC1D,MAAIA,GAAJ,EAAS;AACL,WAAOC,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB,CAAP;AACH;;AACD,SAAOF,OAAO,CAACG,GAAR,CAAY,gCAAZ,CAAP;AACH,CALQ,CAAT,C,CAOA;;AACAP,EAAE,CAACQ,KAAH,CAAS,UAACL,GAAD,EAAS;AACd,MAAIA,GAAJ,EAAS;AACL,WAAOC,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB,CAAP;AACH;;AACDF,EAAAA,OAAO,CAACG,GAAR,CAAY,gCAAZ;AACH,CALD;AAOA,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD;AAAA,SAAa;AAC5CC,IAAAA,IAAI,EAAE,uBADsC;AAE5CD,IAAAA,MAAM,EAANA;AAF4C,GAAb;AAAA,CAA5B;AAIP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD;AAAA,SAAS;AAC9BF,IAAAA,IAAI,EAAE,YADwB;AAE9BE,IAAAA,EAAE,EAAFA;AAF8B,GAAT;AAAA,CAAlB;AAIP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD;AAAA,SAAU;AACjCJ,IAAAA,IAAI,EAAE,cAD2B;AAEjCI,IAAAA,GAAG,EAAHA;AAFiC,GAAV;AAAA,CAApB;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACD,GAAD,EAAME,IAAN;AAAA,SAAgB;AACvCN,IAAAA,IAAI,EAAE,cADiC;AAEvCI,IAAAA,GAAG,EAAHA,GAFuC;AAGvCE,IAAAA,IAAI,EAAJA;AAHuC,GAAhB;AAAA,CAApB;AAMP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD;AAAA,SAAc;AACzCR,IAAAA,IAAI,EAAE,UADmC;AAEzCQ,IAAAA,OAAO,EAAPA;AAFyC,GAAd;AAAA,CAAxB;AAKP,OAAO,SAASC,QAAT,CAAkBD,OAAlB,EAA2B;AAC9B,SAAO,UAASE,QAAT,EAAmB;AACtBA,IAAAA,QAAQ,CAACP,WAAW,CAAC,cAAD,CAAZ,CAAR;AACA,WAAOf,KAAK,CAACuB,GAAN,CAAUC,OAAO,GAAGJ,OAAV,GAAoBK,MAA9B,EAAsCC,IAAtC,CACH,UAASR,IAAT,EAAe;AACXb,MAAAA,OAAO,CAACG,GAAR,CAAYU,IAAZ;AACAS,MAAAA,UAAU,CAAC,YAAW;AAACL,QAAAA,QAAQ,CAACL,WAAW,CAACG,OAAD,EAAUF,IAAI,CAACA,IAAf,CAAZ,CAAR;AAA0C,OAAvD,EAAyD,IAAzD,CAAV;AACH,KAJE,CAAP;AAMH,GARD;AASH","sourcesContent":["import axios from \"axios\"\n// import sqlite3 from \"sqlite3\"\n\n// let nextLeiId = 0\n\n// const BASEURL = \"\";\n// const APIKEY = \"\";\n\n// const sqlite3 = require('sqlite3').verbose();\n// open database\nlet db = new sqlite3.Database('LEIscrape.db.sqlite', (err) => {\n    if (err) {\n        return console.error(err.message);\n    }\n    return console.log('Connected to MongoDB database.');\n});\n\n// close the database connection\ndb.close((err) => {\n    if (err) {\n        return console.error(err.message);\n    }\n    console.log('Close the database connection.');\n});\n\nexport const setVisibilityFilter = (filter) => ({\n    type: 'SET_VISIBILITY_FILTER',\n    filter\n})\nexport const toggleLEI = (id) => ({\n    type: 'TOGGLE_LEI',\n    id\n})\nexport const requestData = (key) => ({\n    type: \"REQUEST_DATA\",\n    key\n})\n\nexport const receiveData = (key, data) => ({\n    type: \"RECEIVE_DATA\",\n    key,\n    data\n})\n\nexport const saveSelectedLEI = (LEIName) => ({\n    type: \"SAVE_LEI\",\n    LEIName\n})\n\nexport function fetchLEI(LEIName) {\n    return function(dispatch) {\n        dispatch(requestData(\"REQUEST_Data\"))\n        return axios.get(BASEURL + LEIName + APIKey).then(\n            function(data) {\n                console.log(data)\n                setTimeout(function() {dispatch(receiveData(LEIName, data.data))}, 2500)\n            }\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}